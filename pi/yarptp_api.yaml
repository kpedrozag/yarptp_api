swagger: "2.0"
info:
  description: "This is the documentation of the YarpTp API, the official interface for controllling the YarpTp robot by wireless."
  version: "1.0.0"
  title: "YarpTp API"
  contact:
    email: "kevinpedroza26@gmail.com"
  license:
    name: "MIT License"
    url: "https://opensource.org/licenses/MIT"
basePath: "/api/v1"
tags:
- name: "Authorization"
  description: "Log in and log out in the service."
- name: "Movements"
  description: "Perform movements"
- name: "Turning"
  description: "Perform turnings of the robot."
schemes:
- "http"
paths:
  /login:
    get:
      tags:
      - "Authorization"
      summary: "Get a token for making requests"
      description: "Get a token for making requests."
      produces:
      - "application/json"
      responses:
        200:
          description: "Authorized user"
          schema:
            $ref: "#/definitions/AuthorizingResponse"
        403:
          description: "There is already a logged user"
          schema:
            $ref: "#/definitions/AlreadyLoggedUserResponse"
  /logout:
    get:
      tags:
      - "Authorization"
      summary: "Log out of the current session"
      description: "Delete the token for making requests."
      produces:
      - "application/json"
      responses:
        200:
          description: "Logged out successfully"
          schema:
            $ref: "#/definitions/AuthorizingResponse"
        403:
          description: "There is no logged user"
          schema:
            $ref: "#/definitions/AlreadyLoggedUserResponse"

  /move/{motor}/{direction}:
    get:
      tags:
      - "Movements"
      summary: "Perform movement"
      description: "Perform movements on the indicated motor and in the indicated direction. Time is undefined and speed is medium (50%)."
      produces:
      - "application/json"
      parameters:
      - name: "motor"
        in: "path"
        description: "Motor that will be moved"
        required: true
        type: "string"
      - name: "direction"
        in: "path"
        description: "Direction of the movement"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SucessfulResponse"
        401:
          description: "User unauthorized"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
  /move/{motor}/{direction}/{time}:
    get:
      tags:
      - "Movements"
      summary: "Perform movement for a indicated time"
      description: "Perform movements on the indicated motor and in the indicated direction during the indicated time. Speed is medium (50%)."
      produces:
      - "application/json"
      parameters:
      - name: "motor"
        in: "path"
        description: "Motor that will be moved"
        required: true
        type: "string"
      - name: "direction"
        in: "path"
        description: "Direction of the movement"
        required: true
        type: "string"
      - name: "time"
        in: "path"
        description: "Time of execution of the movement"
        required: true
        type: "number"
        format: "float"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SucessfulResponse"
        401:
          description: "User unauthorized"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
  /move/{motor}/{direction}/{speed}:
    get:
      tags:
      - "Movements"
      summary: "Perform movement with the indicated speed"
      description: "Perform movements on the indicated motor and in the indicated direction with the indicated speed. Time is undefined."
      produces:
      - "application/json"
      parameters:
      - name: "motor"
        in: "path"
        description: "Motor that will be moved"
        required: true
        type: "string"
      - name: "direction"
        in: "path"
        description: "Direction of the movement"
        required: true
        type: "string"
      - name: "speed"
        in: "path"
        description: "Time of execution of the movement"
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SucessfulResponse"
        401:
          description: "User unauthorized"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
  /move/{motor}/{direction}/{time}/{speed}:
    get:
      tags:
      - "Movements"
      summary: "Perform movement with the indicated speed for the indicated time"
      description: "Perform movements on the indicated motor and in the indicated direction during the indicated time with the indicated speed."
      produces:
      - "application/json"
      parameters:
      - name: "motor"
        in: "path"
        description: "Motor that will be moved"
        required: true
        type: "string"
      - name: "direction"
        in: "path"
        description: "Direction of the movement"
        required: true
        type: "string"
      - name: "time"
        in: "path"
        description: "Time of execution of the movement"
        required: true
        type: "number"
        format: "float"
      - name: "speed"
        in: "path"
        description: "Time of execution of the movement"
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SucessfulResponse"
        401:
          description: "User unauthorized"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
  /move_step/{direction}:
    get:
      tags:
      - "Movements"
      summary: "Perform an step of movement"
      description: "Perform movements in a defined distance."
      produces:
      - "application/json"
      parameters:
      - name: "direction"
        in: "path"
        description: "Direction of the movement"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SucessfulResponse"
        401:
          description: "User unauthorized"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
  /turn/{side}:
    get:
      tags:
      - "Turning"
      summary: "Turn the robot"
      description: "Turn left or turn right."
      produces:
      - "application/json"
      parameters:
      - name: "side"
        in: "path"
        description: "Orientation of the turning."
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SucessfulResponse"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/BadRequestResponse"
        401:
          description: "User unauthorized"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
  /stop:
    get:
      tags:
      - "Movements"
      summary: "Stop the motors"
      description: "Stop the motors."
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SucessfulResponse"
        401:
          description: "User unauthorized"
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
definitions:
  AuthorizingResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
        example: 200
      token:
        type: "string"
        example: "292cc7948c2ac144"
  UnauthorizedResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
        example: 401
      message:
        type: "string"
        example: "You are unauthorized to perform this action. Please, Log in in the URL"
      url:
        type: "string"
        example: "/login"
  AlreadyLoggedUserResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
        example: 403
      message:
        type: "string"
        example: "There is already a logged user"
  SucessfulResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
        example: 200
      message:
        type: "string"
        example: "Moving motor"
  BadRequestResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
        example: 400
      message:
        type: "string"
        example: "You are using a wrong turn instruction. Please, go to the documentation for help"
externalDocs:
  description: "Find more documentation about the resources"
  url: "https://documentacion-del-modulo-yarptp.readthedocs.io/es/latest/"